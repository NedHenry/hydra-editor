#!/usr/bin/env rake
begin
  require 'bundler/setup'
rescue LoadError
  puts 'You must `gem install bundler` and `bundle install` to run rake tasks'
end
begin
  require 'rdoc/task'
rescue LoadError
  require 'rdoc/rdoc'
  require 'rake/rdoctask'
  RDoc::Task = Rake::RDocTask
end

RDoc::Task.new(:rdoc) do |rdoc|
  rdoc.rdoc_dir = 'rdoc'
  rdoc.title    = 'HydraEditor'
  rdoc.options << '--line-numbers'
  rdoc.rdoc_files.include('README.rdoc')
  rdoc.rdoc_files.include('lib/**/*.rb')
end


Bundler::GemHelper.install_tasks

require 'rspec/core'
require 'rspec/core/rake_task'
dummy = File.expand_path('../spec/dummy', __FILE__)
rakefile = File.join(dummy, 'Rakefile')

task :clean do
  sh "rm -rf #{dummy}"
end

task :setup do
  unless File.exists?("#{dummy}/Rakefile")
    require './spec/support/dummy_generator'
    DummyGenerator.start(%W{. --force --dummy-path=#{dummy}})

    cp File.expand_path('../spec/support/Gemfile', __FILE__), "#{dummy}/Gemfile"
    Dir.chdir(dummy) do
      sh "rails g blacklight --devise"
      sh "rm spec/models/user_spec.rb" # generated by devise
    end
  end
end

task :migrate do
#  sh("rake -f #{rakefile} my_engine:install:migrations")
  sh("rake -f #{rakefile} db:migrate db:test:prepare")
end

task :spec do
  here = File.expand_path("../", __FILE__)
  Dir.chdir(dummy) do
    Bundler.with_clean_env do
      #sh "rake myspec"
      sh "bundle exec rspec -I#{here}/spec #{here}/spec"
    end
  end
end
#RSpec::Core::RakeTask.new(:spec => [:setup, :migrate])

